let char = _builtin(char) in
let putchar = _builtin(ml_putchar) in

let expand_product_arg = fun f ->
    fun x -> fun y -> f (x, y)
in
let ineg = _builtin(integer_negate) in
let iadd = expand_product_arg _builtin(integer_add) in
let ilt = expand_product_arg _builtin(integer_less) in
let ieq = expand_product_arg _builtin(integer_equal) in

let fst = fun x -> _fst(x) in
let snd = fun x -> _snd(x) in
let error = fun x -> _error in

let nil = >()| in
let cons = fun head -> fun tail -> <head, tail| in
let tail = fun list -> switch(list: nonnil -> snd nonnil | u -> nil) in
let head = fun list -> switch(list: nonnil -> fst nonnil | u -> error()) in
let map = fun f ->
    let map2 = fun map2 -> fun list -> switch(list: nn -> cons (f (fst nn)) (map2 map2 (snd nn)) | u -> nil)
    in map2 map2 in
let len = fun list ->
    let len2 = fun len2 -> fun list -> switch(list: nn -> iadd 1 (len2 len2 (snd nn)) | nil -> 0)
    in len2 len2 list in
